{% extends "layout" %}
{% block pagetitle %}{{super()}} - Asset analyzer{% endblock %}
{% block jsdata %}
	{{super()}}

	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script type="text/javascript">
		google.charts.load('current', 
			{'packages':['line', 'table'], 'language':'de'});
		google.charts.setOnLoadCallback(drawTable);


	function drawTable() {
		var data = new google.visualization.DataTable();
		data.addColumn('string', 'Date');
		data.addColumn('string', 'Type');
		data.addColumn('number', 'Position');
		data.addColumn('number', 'Amount');
		data.addColumn('string', 'Currency');
		data.addColumn('string', 'Note');
		data.addColumn('string', 'Document');

		data.addRows([
		{% if transactions %}
			{% for t in transactions%}[
			'{{ t.cash_date }}',
			{v: '{{t.trans_type | lower}}', f: '{{t.trans_type | type_to_string}}' },
			{v: {% if t.position %}{{t.position}}{% else %}0{% endif %}, f: '{{t.position | format_num}}' },
			{v: {{t.cash_amount}}, f: '{{t.cash_amount | format_num}}' },
			{v: '{{t.cash_currency}}', f: '{{t.cash_currency}}' },
			'{{t.note}}',
			'{{t.doc_path}}',
			],
			{% endfor %}
		{% endif %}
			]);
		var view = new google.visualization.DataView(data);
		var table = new google.visualization.Table(document.getElementById('asset_transactions'));
		table.draw(view, {sortColumn: 0, sortAscending: false, width: '100%'} );
		}	

	function asset_change() {
		var asset_id = document.getElementById("asset").value;
		window.location.href = "asset?asset_id=" + asset_id;
	}
	</script>
{% endblock %}
{% block content %}
<div class="center" align="center">
	<div class="table" style="margin-bottom: 20px;">
		<div class="table_row">
			<label class="table_cell" for="asset_id">Asset:</label>
			<div class="table_cell horizontalgap" style="width:10px"></div>
			<select class="table_cell" id="asset" name="asset_id" onchange="asset_change()"> 
			{% if assets %}
				<option value=null {% if not asset_id %}selected{% endif%}></option>
				{% for asset in assets %}
					<option value="{{asset.id}}" {% if asset_id and asset.id == asset_id %}selected{% endif %}>{{asset.name}}</option> 
				{% endfor %}
			{% endif %}
			</select> 
		</div>
	</div>
	<div class="table" style="margin-bottom: 20px;">
		<div class="table_row">
			{% if asset_id %}
				<div class="table_cell">
					<a class="button" id="edit_button" href="{{relpath}}asset/edit?asset_id={{asset_id}}">Edit</a>
				</div>
				<div class="table_cell">
					<a class="button" id="delete_button" href="{{relpath}}asset/delete?asset_id={{asset_id}}">Delete</a>
				</div>
				<div class="table_cell">
					<a class="button" id="ticker_button" href="{{relpath}}tickers?asset_id={{asset_id}}">Tickers</a>
				</div>
				<div class="table_cell">
					<a class="button" id="quotes_button" href="{{relpath}}quotes?asset_id={{asset_id}}">Quotes</a>
				</div>
			{% endif %}
			<div class="table_cell">
				<a class="button" id="new_link" href="{{relpath}}asset/edit">New</a>
			</div>
			{% if comdirect %}
				<div class="table_cell">
					<a class="button" id="codi_link" href="https://www.comdirect.de/inf/aktien/detail/uebersicht.html?ID_NOTATION={{comdirect}}" target="_blank">comdirect</a>
				</div>
			{% endif %}
			{% if gurufocus %}
				<div class="table_cell">
					<a class="button" id="gf_link" href="https://www.gurufocus.com/stock/{{gurufocus}}" target="_blank">gurufocus</a>
				</div>
			{% endif %}
		</div>
	</div>
	<div class="table" style="margin-bottom: 20px;">
		<div class="table_row">
			<div class="table_cell">
				<h3>Quote history</h3>	
				<div id="coord"></div>
				<canvas id="canvas" width="1000" height="800"></canvas>
			</div>
			<div class="table_cell horizontalgap" style="width:30px"></div>
			<div class="table_cell">
				<p><div id="asset_transactions"></div></p>
			</div>
		</div>
	</div>
</div>
{% if quotes %}
<script>
init();

async function init() {
    const [{Chart, default: init}, {main, setup}] = await Promise.all([
        import("/static/wasm_graph.js"),
        import("/static/index.js"),
    ]);
    await init();
    setup(Chart);
	var dates = new BigInt64Array([{% for quote in quotes %}BigInt(Date.parse('{{quote.time}}')),{% endfor %}]);
	var values = new Float32Array([{% for quote in quotes %}{{quote.price}},{% endfor %}]);
	var title = "Asset quote history";
	var labels = '[{% for source in sources  %}{"name":"{{source.name}}","start_idx":{{source.start_idx}} }{% endfor %}]';
    main(title, dates, values, labels);
}
</script>
{% endif %}
{% endblock %}
